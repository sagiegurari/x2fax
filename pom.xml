<project xmlns="http://maven.apache.org/POM/4.0.0"
		 xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>net.sf.fax4j</groupId>
	<artifactId>fax4j-x2fax</artifactId>
	<version>0.1.3</version>
	<packaging>jar</packaging>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<fax4j.version>0.43.5</fax4j.version>
	</properties>

	<name>fax4j-x2fax</name>
	<description>
		The fax4j x2fax is a set of standalone servers and deployable components which enable to provide x2fax services.
		Already comes with built-in email component to enhance email servers to provide email2fax services and HTTP servers and WARs to convert any web server to a web2fax bridge.
	</description>
	<url>https://github.com/sagiegurari/x2fax</url>
	<organization>
		<name>${project.name}</name>
		<url>https://github.com/sagiegurari/x2fax</url>
	</organization>
	<inceptionYear>2013</inceptionYear>
	<developers>
		<developer>
			<id>sagiegurari</id>
			<name>Sagie Gur-Ari</name>
			<email>sagiegurari@gmail.com</email>
			<roles>
				<role>Project Author</role>
			</roles>
		</developer>
	</developers>
	<issueManagement>
		<system>${project.name} forums</system>
		<url>https://github.com/sagiegurari/x2fax/issues</url>
	</issueManagement>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>
				The fax4j-x2fax and fax4j libraries are distributed under the "The Apache Software License, Version 2.0" license which means that it is possible to distribute these libraries also in commercial closed source products.
			</comments>
		</license>
	</licenses>

	<dependencies>
		<!-- runtime dependencies -->
		<dependency>
			<groupId>net.sf.fax4j</groupId>
			<artifactId>fax4j</artifactId>
			<version>${fax4j.version}</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-server</artifactId>
			<version>7.6.0.RC5</version>
		</dependency>
		<dependency>
			<groupId>org.eclipse.jetty</groupId>
			<artifactId>jetty-servlet</artifactId>
			<version>7.6.0.RC5</version>
		</dependency>
		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
			<version>1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.james</groupId>
			<artifactId>james-server-mailets</artifactId>
			<version>3.0-M2</version>
			<scope>provided</scope>
		</dependency>

		<!-- test dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.8.2</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
			<version>1.5.1</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-mockito</artifactId>
			<version>1.5.1</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<target>1.5</target>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jar-plugin</artifactId>
				<version>2.3.2</version>
				<configuration>
					<archive>
						<manifest>
							<addDefaultImplementationEntries>true</addDefaultImplementationEntries>
							<addDefaultSpecificationEntries>true</addDefaultSpecificationEntries>
						</manifest>
						<manifestEntries>
							<Built-By>${project.name}</Built-By>
						</manifestEntries> 
					</archive>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<version>2.2.1</version>
				<executions>
					<execution>
						<id>attach-sources</id>
						<phase>verify</phase>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
				<executions>
					<execution>
						<id>attach-javadocs</id>
						<goals>
							<goal>jar</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptor>${project.basedir}/src/main/assembly/assembly_full.xml</descriptor>
				</configuration>
				<executions>
					<execution>
						<phase>site</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-site-plugin</artifactId>
				<version>3.0</version>
				<configuration>
					<generateSitemap>true</generateSitemap>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>license-maven-plugin</artifactId>
				<version>1.5</version>
				<executions>
					<execution>
						<id>update-project-license</id>
						<goals>
							<goal>update-project-license</goal>
						</goals>
						<configuration>
							<licenseName>apache_v2</licenseName>
							<force>true</force>
							<encoding>UTF-8</encoding>
						</configuration>
					</execution>
					<execution>
						<id>add-third-party</id>
						<goals>
							<goal>add-third-party</goal>
						</goals>
						<configuration>
							<excludedScopes>test</excludedScopes>
							<licenseMerges>
								<licenseMerge>The Apache Software License, Version 2.0|Apache 2|Apache License 2.0|Apache License|Apache License, Version 2.0</licenseMerge>
							</licenseMerges>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<dependencies>
					<dependency>
						<groupId>com.sun</groupId>
						<artifactId>tools</artifactId>
						<version>1.5.0</version>
						<scope>system</scope>
						<systemPath>${java.home}/../lib/tools.jar</systemPath>
					</dependency>
				</dependencies>
				<executions>
					<execution>
						<id>construct-components</id>
						<phase>verify</phase>
						<configuration>
							<target>
								<!-- 
									This ant target will create the different archives and wrapper packages for the bridge.
									While it is not the maven way to implement, the fax4j-x2fax is in early stage of development and
									this way would allow to quickly provide working servers/deployable components.
								-->

								<dependencyfilesets prefix="compile." scopes="compile" types="jar"/>
								<mkdir dir="${project.build.directory}/dependencies_jars/compile_jars"/>
								<copy todir="${project.build.directory}/dependencies_jars/compile_jars" flatten="true">
									<fileset refid="compile.maven.project.dependencies"/>
								</copy>
								<mkdir dir="${project.build.directory}/dependencies_jars/compile_jars_no_jetty"/>
								<copy todir="${project.build.directory}/dependencies_jars/compile_jars_no_jetty" flatten="true">
									<fileset refid="compile.maven.project.dependencies"/>
								</copy>
								<delete>
									<!-- delete jars that we are sure are not needed -->
									<fileset dir="${project.build.directory}/dependencies_jars/compile_jars_no_jetty" includes="**/*jetty*.jar"/>
								</delete>

								<!-- create a deployable war -->
								<mkdir dir="${project.build.directory}/components/war"/>
								<war destfile="${project.build.directory}/components/war/Web2Fax.war"
									 webxml="${project.basedir}/src/main/webapp/WEB-INF/web.xml">
									<lib file="${project.build.directory}/${project.name}-${project.version}.jar"/>
									<lib dir="${project.build.directory}/dependencies_jars/compile_jars_no_jetty"/>
								</war>
								<copy file="${project.basedir}/src/main/external_files/war/Instructions.txt" todir="${project.build.directory}/components/war"/>

								<!-- create a mailet component -->
								<mkdir dir="${project.build.directory}/components/Email-ApacheJAMES/lib"/>
								<copy file="${project.build.directory}/${project.name}-${project.version}.jar" todir="${project.build.directory}/components/Email-ApacheJAMES/lib"/>
								<copy todir="${project.build.directory}/components/Email-ApacheJAMES/lib" flatten="true">
									<fileset dir="${project.build.directory}/dependencies_jars/compile_jars_no_jetty"/>
								</copy>
								<copy todir="${project.build.directory}/components/Email-ApacheJAMES">
									<fileset dir="${project.basedir}/src/main/external_files/james"/>
								</copy>

								<!-- create a standalone HTTP server -->
								<mkdir dir="${project.build.directory}/servers/http-jetty/lib"/>
								<copy file="${project.build.directory}/${project.name}-${project.version}.jar" todir="${project.build.directory}/servers/http-jetty/lib"/>
								<copy todir="${project.build.directory}/servers/http-jetty/lib" flatten="true">
									<fileset refid="compile.maven.project.dependencies"/>
								</copy>
								<copy todir="${project.build.directory}/servers/http-jetty">
									<fileset dir="${project.basedir}/src/main/external_files/jetty"/>
								</copy>
								<copy todir="${project.build.directory}/servers/http-jetty">
									<fileset dir="${project.basedir}/src/main/external_files/general/configuration"/>
								</copy>
								<copy todir="${project.build.directory}/servers/http-jetty">
									<fileset dir="${project.basedir}/src/main/external_files/general/scripts"/>
									<filterset>
										<filter token="project.version" value="${project.version}"/>
										<filter token="main.class" value="org.fax4j.x2fax.http.servlet.jetty.JettyWeb2FaxMain"/>
										<filter token="jar.dir" value="./lib"/>
										<filter token="fax4j.version" value="${fax4j.version}"/>
										<filter token="jvm.args" value="-Dfax4j.http.port=80"/>
									</filterset>
									<mapper type="regexp" from="(StartUp)(.+)" to="StartHttpBridge\2" />
								</copy>

								<!-- create a standalone CLI -->
								<mkdir dir="${project.build.directory}/servers/cli/lib"/>
								<copy file="${project.build.directory}/${project.name}-${project.version}.jar" todir="${project.build.directory}/servers/cli/lib"/>
								<copy todir="${project.build.directory}/servers/cli/lib" flatten="true">
									<fileset dir="${project.build.directory}/dependencies_jars/compile_jars_no_jetty"/>
								</copy>
								<copy todir="${project.build.directory}/servers/cli">
									<fileset dir="${project.basedir}/src/main/external_files/cli"/>
								</copy>
								<copy todir="${project.build.directory}/servers/cli">
									<fileset dir="${project.basedir}/src/main/external_files/general/configuration"/>
								</copy>
								<copy todir="${project.build.directory}/servers/cli">
									<fileset dir="${project.basedir}/src/main/external_files/general/scripts"/>
									<filterset>
										<filter token="project.version" value="${project.version}"/>
										<filter token="main.class" value="org.fax4j.x2fax.cli.CLI2FaxMain"/>
										<filter token="jar.dir" value="./lib"/>
										<filter token="fax4j.version" value="${fax4j.version}"/>
										<filter token="jvm.args" value=""/>
									</filterset>
									<mapper type="regexp" from="(StartUp)(.+)" to="SendFax\2" />
								</copy>
								
								<!-- fix all possible formatting issues -->
								<fixcrlf eol="lf" eof="remove" srcDir="${project.build.directory}/components">
									<include name="**/*.sh"/>
									<include name="**/*.txt*"/>
								</fixcrlf>
								<fixcrlf eol="lf" eof="remove" srcDir="${project.build.directory}/servers">
									<include name="**/*.sh"/>
									<include name="**/*.txt*"/>
								</fixcrlf>
							</target>
						</configuration>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

	<reporting>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>index</report>
							<report>license</report>
							<report>summary</report>
							<report>issue-tracking</report>
							<report>scm</report>
							<report>project-team</report>
							<report>dependencies</report>
							<report>dependency-info</report>
							<report>plugin-management</report>
							<report>plugins</report>
							<report>dependency-management</report>
							<report>help</report>
						</reports>
					</reportSet>
				</reportSets> 
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-changes-plugin</artifactId>
				<version>2.9</version>
				<reportSets>
					<reportSet>
						<reports>
							<report>changes-report</report>
						</reports>
					</reportSet>
				</reportSets>
				<configuration>
					<escapeHTML>false</escapeHTML>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-report-plugin</artifactId>
				<version>2.15</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-javadoc-plugin</artifactId>
				<version>2.9.1</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-jxr-plugin</artifactId>
				<version>2.3</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>3.0.1</version>
				<configuration>
					<minimumTokens>75</minimumTokens>
					<rulesets>
						<ruleset>${project.basedir}/src/main/code_inspection/fax4j_pmd.xml</ruleset>
					</rulesets>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.10</version>
				<configuration>
					<configLocation>${project.basedir}/src/main/code_inspection/fax4j_checkstyle.xml</configLocation>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>cobertura-maven-plugin</artifactId>
				<version>2.5.2</version>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>taglist-maven-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<tagListOptions>
						<tagClasses>
							<tagClass>
								<displayName>TODOs</displayName>
								<tags>
									<tag>
										<matchString>TODO</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
									<tag>
										<matchString>FIXME</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
							<tagClass>
								<displayName>Deprecated</displayName>
								<tags>
									<tag>
										<matchString>deprecated</matchString>
										<matchType>ignoreCase</matchType>
									</tag>
								</tags>
							</tagClass>
						</tagClasses>
					</tagListOptions>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>clirr-maven-plugin</artifactId>
				<version>2.6.1</version>
				<configuration>
					<minSeverity>info</minSeverity>
				</configuration>
			</plugin>
		</plugins>
	</reporting>

	<profiles>
		<profile>
			<id>Release_Profile</id>
			<activation>
				<property>
					<name>env.FAX4J_GPG_PASSPHRASE</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.4</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
								<configuration>
									<passphrase>${env.FAX4J_GPG_PASSPHRASE}</passphrase>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>